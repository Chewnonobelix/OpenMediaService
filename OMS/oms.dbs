<?xml version="1.0" encoding="UTF-8" ?>
<project name="OMS" id="Project_1b86" database="Sqlite" >
	<schema name="Default" >
		<table name="SmartGroup" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<column name="op" type="INTEGER" jt="4" />
			<column name="parent" type="TEXT" jt="-1" />
			<index name="pk_SmartGroup" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_smartgroup_smartgroup" to_schema="Default" to_table="SmartGroup" >
				<fk_column name="parent" pk="id" />
			</fk>
			<fk name="fk_smartgroup_playlist" to_schema="Default" to_table="playlist" >
				<fk_column name="parent" pk="id" />
			</fk>
		</table>
		<table name="SmartRule" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<column name="op" type="INTEGER" jt="4" />
			<column name="field" type="TEXT" jt="-1" />
			<column name="value" type="TEXT" jt="-1" />
			<column name="parent" type="TEXT" jt="-1" />
			<index name="pk_SmartRule" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_smartrule_smartgroup" to_schema="Default" to_table="SmartGroup" >
				<fk_column name="parent" pk="id" />
			</fk>
		</table>
		<table name="library" prior="Tbl" generator_rows="100" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<index name="pk_library" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="media" prior="Tbl" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<column name="lib" type="TEXT" jt="-1" />
			<index name="pk_media" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_media_library" to_schema="Default" to_table="library" >
				<fk_column name="lib" pk="id" />
			</fk>
		</table>
		<table name="mediaPlaylist" prior="mediaPLaylist" >
			<column name="pl" type="TEXT" jt="-1" mandatory="y" />
			<column name="media" type="TEXT" jt="-1" mandatory="y" />
			<column name="plindex" prior="index" type="INTEGER" jt="4" />
			<fk name="fk_mediaplaylist_media" to_schema="Default" to_table="media" >
				<fk_column name="media" pk="id" />
			</fk>
			<fk name="fk_mediaplaylist_playlist" to_schema="Default" to_table="playlist" >
				<fk_column name="pl" pk="id" />
			</fk>
		</table>
		<table name="metadata" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<column name="name" type="TEXT" length="100" jt="-1" mandatory="y" />
			<column name="value" type="TEXT" jt="-1" mandatory="y" />
			<index name="idx_metadata" unique="UNIQUE_INDEX" >
				<column name="id" />
				<column name="name" />
			</index>
			<fk name="fk_metadata_library" to_schema="Default" to_table="library" >
				<fk_column name="id" pk="id" />
			</fk>
			<fk name="fk_metadata_playlist" to_schema="Default" to_table="playlist" >
				<fk_column name="id" pk="id" />
			</fk>
		</table>
		<table name="playlist" prior="Tbl" >
			<column name="id" type="TEXT" jt="-1" mandatory="y" />
			<column name="lib" type="TEXT" jt="-1" mandatory="y" />
			<index name="pk_playlist" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="probe" prior="Tbl" >
			<column name="lib" type="TEXT" jt="-1" mandatory="y" />
			<column name="lastProbed" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_probe" unique="PRIMARY_KEY" >
				<column name="lib" />
			</index>
			<fk name="fk_probe_library" to_schema="Default" to_table="library" delete_action="cascade" update_action="cascade" >
				<fk_column name="lib" pk="id" />
			</fk>
		</table>
		<table name="sourceDir" prior="Tbl" generator_rows="100" >
			<column name="id" prior="lib" type="TEXT" jt="-1" mandatory="y" />
			<column name="path" type="TEXT" jt="-1" mandatory="y" />
			<index name="Unq_sourceDir" unique="UNIQUE_INDEX" >
				<column name="id" />
				<column name="path" />
			</index>
			<fk name="fk_sourcedir_media" to_schema="Default" to_table="media" >
				<fk_column name="id" pk="id" />
			</fk>
			<fk name="fk_sourcedir_library" to_schema="Default" to_table="library" >
				<fk_column name="id" pk="id" />
			</fk>
		</table>
		<trigger name="create_library" table="library" id="Trigger-880" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER create_library AFTER INSERT ON library
BEGIN
INSERT INTO probe (lib) VALUES (NEW.id);
INSERT INTO metadata (id, name, value) VALUES (NEW.id, "name", ""), (NEW.id, "role", 0);
END]]></string>
		</trigger>
		<trigger name="delete_library" table="library" id="Trigger-852" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER delete_library BEFORE DELETE ON library
BEGIN
DELETE FROM sourceDir WHERE id=OLD.id;
DELETE FROM media WHERE lib=OLD.id;
DELETE FROM playlist WHERE lib=OLD.id;
DELETE FROM probe WHERE lib=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
END]]></string>
		</trigger>
		<trigger name="delete_media" table="media" id="Trigger-fd1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER delete_media BEFORE DELETE ON media
BEGIN
DELETE FROM mediaPlaylist WHERE media=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
DELETE FROM sourceDir WHERE id=OLD.id;
END]]></string>
		</trigger>
		<trigger name="delete_playlist" table="playlist" id="Trigger-23b1" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER delete_playlist BEFORE DELETE ON playlist
BEGIN
DELETE FROM metadata WHERE id=OLD.id;
DELETE FROM mediaPlaylist WHERE pl=OLD.id;
DELETE FROM SmartGroup WHERE parent=OLD.id;
END]]></string>
		</trigger>
		<trigger name="delete_smartgroup" id="Trigger-af6" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER delete_SmartGroup BEFORE DELETE ON SmartGroup
BEGIN
DELETE FROM SmartGroup WHERE parent=OLD.id;
DELETE FROM SmartRule WHERE parent=OLD.id;
END]]></string>
		</trigger>
	</schema>
	<connector name="Build" database="Sqlite" driver_class="org.sqlite.JDBC" driver_jar="sqlite-jdbc-3.36.0.3.jar" url="jdbc:sqlite:D:\Qt\OpenMediaService\build-OMS-Desktop_Qt_6_4_0_MinGW_64_bit-Debug\Application/oms" host="localhost" port="7210" instance="D:/Qt/OpenMediaService/OMS/oms" />
	<connector name="Sqlite" database="Sqlite" driver_class="org.sqlite.JDBC" driver_jar="sqlite-jdbc-3.36.0.3.jar" driver_desc="Standard" host="localhost" port="7210" instance="D:/Qt/OpenMediaService/OMS/oms" />
	<layout name="Parsed Script Layout" id="Layout_1fb6" show_relation="columns" >
		<entity schema="Default" name="SmartGroup" color="3986C1" x="224" y="368" />
		<entity schema="Default" name="SmartRule" color="3986C1" x="400" y="208" />
		<entity schema="Default" name="library" color="BED3F4" x="1264" y="304" />
		<entity schema="Default" name="media" color="C1D8EE" x="912" y="496" />
		<entity schema="Default" name="mediaPlaylist" color="C1D8EE" x="592" y="368" />
		<entity schema="Default" name="metadata" color="C1D8EE" x="1184" y="720" />
		<entity schema="Default" name="playlist" color="C1D8EE" x="480" y="528" />
		<entity schema="Default" name="probe" color="BED3F4" x="1360" y="384" />
		<entity schema="Default" name="sourceDir" color="BED3F4" x="1136" y="544" />
		<callout x="1152" y="224" pointer="Round" >
			<comment><![CDATA[Current layout is generated by parsing the SQL script.
DbSchema is in 'offline' mode (not connected to any database).]]></comment>
		</callout>
		<callout x="48" y="80" pointer="Round" >
			<comment><![CDATA[DbSchema is disconnected from the database.
New designed tables will be saved to project file and later can be create in any database.
Right-click the layout to create new tables. Drop this callout from its context menu.]]></comment>
		</callout>
		<group name="library" color="ECF0F7" >
			<entity schema="Default" name="sourceDir" />
			<entity schema="Default" name="probe" />
			<entity schema="Default" name="library" />
		</group>
		<script name="SQL_Editor" id="Editor-1f38" language="SQL" >
			<string><![CDATA[SELECT * FROM probe]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor-1057" language="SQL" >
			<string><![CDATA[DELETE FROM library WHERE ]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor-1a18" language="SQL" >
			<string><![CDATA[CREATE TABLE library ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	name                 TEXT(100) NOT NULL    ,
	role                 INTEGER NOT NULL DEFAULT 0   ,
	isShared             BOOLEAN NOT NULL DEFAULT 0   
 );

CREATE TABLE media ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	lib                  TEXT     ,
	role                 INTEGER NOT NULL DEFAULT 0   ,
	count                INTEGER NOT NULL DEFAULT 0   ,
	rating               INTEGER NOT NULL DEFAULT 0   ,
	added                DATE NOT NULL DEFAULT CURRENT_DATE   ,
	lastFinished         DATE     ,
	currentRead          NUMERIC NOT NULL DEFAULT 0   ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE playlist ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	name                 TEXT(100)     ,
	isShuffle            BOOLEAN NOT NULL DEFAULT 0   ,
	lib                  TEXT NOT NULL    ,
	smart                TEXT     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE probe ( 
	lib                  TEXT NOT NULL  PRIMARY KEY  ,
	lastProbed           DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP   ,
	FOREIGN KEY ( lib ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE TABLE sourceDir ( 
	id                   TEXT NOT NULL    ,
	path                 TEXT NOT NULL    ,
	FOREIGN KEY ( id ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( id ) REFERENCES media( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE UNIQUE INDEX Unq_sourceDir ON sourceDir ( id, path );

CREATE TRIGGER create_library AFTER INSERT ON library
BEGIN
INSERT INTO probe (lib) VALUES (NEW.id);
END

CREATE TRIGGER delete_library BEFORE DELETE ON library
BEGIN
DELETE FROM sourceDir WHERE id=OLD.id;
DELETE FROM media WHERE lib=OLD.id;
DELETE FROM playlist WHERE lib=OLD.id;
DELETE FROM probe WHERE lib=OLD.id;
END

INSERT INTO library ( id, name, role, isShared ) VALUES ( 'testid', 'TL', 5, 0);]]></string>
		</script>
		<script name="SQL_Editor_003" id="Editor-1013" language="SQL" >
			<string><![CDATA[CREATE TABLE library ( 
	id                   TEXT NOT NULL  PRIMARY KEY  
 );

CREATE TABLE media ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	lib                  TEXT     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE playlist ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	lib                  TEXT NOT NULL    ,
	smart                TEXT     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE probe ( 
	lib                  TEXT NOT NULL  PRIMARY KEY  ,
	lastProbed           DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP   ,
	FOREIGN KEY ( lib ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE TABLE sourceDir ( 
	id                   TEXT NOT NULL    ,
	path                 TEXT NOT NULL    ,
	FOREIGN KEY ( id ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( id ) REFERENCES media( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE TABLE mediaPlaylist ( 
	pl                   TEXT NOT NULL    ,
	media                TEXT NOT NULL    ,
	plindex              INTEGER     ,
	FOREIGN KEY ( pl ) REFERENCES playlist( id )  ,
	FOREIGN KEY ( media ) REFERENCES media( id )  
 );

CREATE TABLE metadata ( 
	id                   TEXT NOT NULL    ,
	name                 TEXT(100) NOT NULL    ,
	value                TEXT NOT NULL    ,
	pid                  TEXT NOT NULL  PRIMARY KEY  ,
	FOREIGN KEY ( id ) REFERENCES media( id )  ,
	FOREIGN KEY ( id ) REFERENCES library( id )  ,
	FOREIGN KEY ( id ) REFERENCES playlist( id )  ,
	FOREIGN KEY ( id ) REFERENCES metadata( pid )  
 );

CREATE UNIQUE INDEX Unq_sourceDir ON sourceDir ( id, path );

CREATE UNIQUE INDEX idx_metadata ON metadata ( id, name );

CREATE TRIGGER create_library AFTER INSERT ON library
BEGIN
INSERT INTO probe (lib) VALUES (NEW.id);
END

CREATE TRIGGER delete_library BEFORE DELETE ON library
BEGIN
DELETE FROM sourceDir WHERE id=OLD.id;
DELETE FROM media WHERE lib=OLD.id;
DELETE FROM playlist WHERE lib=OLD.id;
DELETE FROM probe WHERE lib=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
END

CREATE TRIGGER delete_media BEFORE DELETE ON media
BEGIN
DELETE FROM mediaPlaylist WHERE media=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
DELETE FROM sourceDir WHERE id=OLD.id;
END

CREATE TRIGGER delete_metadata BEFORE DELETE ON metadata
BEGIN
DELETE FROM metadata WHERE id=OLD.pid;
END

CREATE TRIGGER delete_playlist BEFORE DELETE ON playlist
BEGIN
DELETE FROM metadata WHERE id=OLD.id;
END]]></string>
		</script>
		<script name="SQL_Editor_004" id="Editor-ed5" language="SQL" >
			<string><![CDATA[CREATE TABLE library ( 
	id                   TEXT NOT NULL  PRIMARY KEY  
 );

CREATE TABLE media ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	lib                  TEXT     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE playlist ( 
	id                   TEXT NOT NULL  PRIMARY KEY  ,
	lib                  TEXT NOT NULL    ,
	smart                TEXT     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );

CREATE TABLE probe ( 
	lib                  TEXT NOT NULL  PRIMARY KEY  ,
	lastProbed           DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP   ,
	FOREIGN KEY ( lib ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE TABLE sourceDir ( 
	id                   TEXT NOT NULL    ,
	path                 TEXT NOT NULL    ,
	FOREIGN KEY ( id ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( id ) REFERENCES media( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE TABLE mediaPlaylist ( 
	pl                   TEXT NOT NULL    ,
	media                TEXT NOT NULL    ,
	plindex              INTEGER     ,
	FOREIGN KEY ( pl ) REFERENCES playlist( id )  ,
	FOREIGN KEY ( media ) REFERENCES media( id )  
 );

CREATE TABLE metadata ( 
	id                   TEXT NOT NULL    ,
	name                 TEXT(100) NOT NULL    ,
	value                TEXT NOT NULL    ,
	pid                  TEXT NOT NULL  PRIMARY KEY  ,
	FOREIGN KEY ( id ) REFERENCES media( id )  ,
	FOREIGN KEY ( id ) REFERENCES library( id )  ,
	FOREIGN KEY ( id ) REFERENCES playlist( id )  ,
	FOREIGN KEY ( id ) REFERENCES metadata( pid )  
 );

CREATE UNIQUE INDEX Unq_sourceDir ON sourceDir ( id, path );

CREATE UNIQUE INDEX idx_metadata ON metadata ( id, name );

CREATE TRIGGER create_library AFTER INSERT ON library
BEGIN
INSERT INTO probe (lib) VALUES (NEW.id);
END

CREATE TRIGGER delete_library BEFORE DELETE ON library
BEGIN
DELETE FROM sourceDir WHERE id=OLD.id;
DELETE FROM media WHERE lib=OLD.id;
DELETE FROM playlist WHERE lib=OLD.id;
DELETE FROM probe WHERE lib=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
END

CREATE TRIGGER delete_media BEFORE DELETE ON media
BEGIN
DELETE FROM mediaPlaylist WHERE media=OLD.id;
DELETE FROM metadata WHERE id=OLD.id;
DELETE FROM sourceDir WHERE id=OLD.id;
END

CREATE TRIGGER delete_metadata BEFORE DELETE ON metadata
BEGIN
DELETE FROM metadata WHERE id=OLD.pid;
END

CREATE TRIGGER delete_playlist BEFORE DELETE ON playlist
BEGIN
DELETE FROM metadata WHERE id=OLD.id;
END]]></string>
		</script>
		<script name="SQL_Editor_005" id="Editor-8" language="SQL" >
			<string><![CDATA[DELETE FROM metadata]]></string>
		</script>
		<script name="SQL_Editor_006" id="Editor-2694" language="SQL" >
			<string><![CDATA[SELECT * FROM library
]]></string>
		</script>
		<script name="SQL_Editor_007" id="Editor-555" language="SQL" >
			<string><![CDATA[SELECT * FROM metadata
]]></string>
		</script>
		<script name="SQL_Editor_008" id="Editor-127e" language="SQL" >
			<string><![CDATA[SELECT * FROM probe]]></string>
		</script>
		<script name="SQL_Editor_009" id="Editor-40f" language="SQL" >
			<string><![CDATA[DELETE FROM library]]></string>
		</script>
		<script name="SQL_Editor_010" id="Editor-1e6d" language="SQL" >
			<string><![CDATA[DELETE FROM library]]></string>
		</script>
		<script name="SQL_Editor_011" id="Editor-892" language="SQL" >
			<string><![CDATA[SELECT * FROM  library as l, metadata as m, probe as p WHERE m.id = l.id OR p.lib = l.id;]]></string>
		</script>
		<script name="create_library" id="Editor-127f" language="SQL" >
			<string><![CDATA[CREATE TRIGGER create_library AFTER INSERT ON library
BEGIN
INSERT INTO probe (lib) VALUES (NEW.id);
END]]></string>
		</script>
		<script name="library" id="Editor-1474" language="SQL" >
			<string><![CDATA[DELETE FROM library;]]></string>
		</script>
		<script name="library_001" id="Editor-722" language="SQL" >
			<string><![CDATA[DELETE FROM library WHERE id="testid";]]></string>
		</script>
		<script name="media" id="Editor_277" language="SQL" >
			<string><![CDATA[CREATE TABLE media ( 
	id                   text NOT NULL  PRIMARY KEY  ,
	lib                  text     ,
	role                 integer NOT NULL DEFAULT 0   ,
	count                integer NOT NULL DEFAULT 0   ,
	rating               integer NOT NULL DEFAULT 0   ,
	added                date NOT NULL DEFAULT CURRENT_DATE   ,
	lastFinished         date     ,
	currentRead          numeric NOT NULL DEFAULT 0   ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );]]></string>
		</script>
		<script name="mediaPlaylist" id="Editor_159d" language="SQL" >
			<string><![CDATA[CREATE TABLE mediaPlaylist ( 
	pl                   text NOT NULL    ,
	media                text NOT NULL    ,
	plindex                integer     ,
	FOREIGN KEY ( media ) REFERENCES media( id )  ,
	FOREIGN KEY ( pl ) REFERENCES playlist( id )  
 );]]></string>
		</script>
		<script name="playlist" id="Editor_b39" language="SQL" >
			<string><![CDATA[CREATE TABLE playlist ( 
	id                   text NOT NULL  PRIMARY KEY  ,
	name                 text     ,
	isShuffle            boolean NOT NULL DEFAULT 0   ,
	lib                  text NOT NULL    ,
	smart                text     ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  ,
	FOREIGN KEY ( smart ) REFERENCES smartgroup( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );]]></string>
		</script>
		<script name="probe" id="Editor_aa5" language="SQL" >
			<string><![CDATA[CREATE TABLE probe ( 
	lib                  text NOT NULL  PRIMARY KEY  ,
	lastProbed           datetime NOT NULL DEFAULT CURRENT_TIMESTAMP   ,
	FOREIGN KEY ( lib ) REFERENCES library( id )  
 );]]></string>
		</script>
		<script name="probe_001" id="Editor_992" language="SQL" >
			<string><![CDATA[CREATE TABLE probe ( 
	lib                  text NOT NULL  PRIMARY KEY  ,
	lastProbed           datetime NOT NULL DEFAULT CURRENT_TIMESTAMP   ,
	FOREIGN KEY ( lib ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );]]></string>
		</script>
		<script name="probe_002" id="Editor-13ce" language="SQL" >
			<string><![CDATA[SELECT * FROM library, metadata WHERE metadata.id = library.id]]></string>
		</script>
		<script name="probe_003" id="Editor-1e01" language="SQL" >
			<string><![CDATA[SELECT * FROM library
]]></string>
		</script>
		<script name="smart" id="Editor_1eaf" language="SQL" >
			<string><![CDATA[CREATE TABLE smart ( 
	parent               text NOT NULL    ,
	value                text NOT NULL    ,
	FOREIGN KEY ( parent ) REFERENCES smartgroup( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( value ) REFERENCES smartgroup( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( value ) REFERENCES smartrule( id ) ON DELETE CASCADE ON UPDATE CASCADE
 );]]></string>
		</script>
		<script name="sourceDir" id="Editor_1225" language="SQL" >
			<string><![CDATA[CREATE TABLE sourceDir ( 
	id                   text NOT NULL    ,
	path                 text NOT NULL    ,
	CONSTRAINT Unq_sourceDir UNIQUE ( id, path ) ,
	FOREIGN KEY ( id ) REFERENCES library( id ) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY ( id ) REFERENCES media( id )  
 );]]></string>
		</script>
		<form name="Report" id="Report-1bca" template="Page" css="container-fluid" view="frame" confirmed="y" >
			<body name="Body" template="Grid" pos="0,0,0,0,f,f" layout="{{-2},{-2}}" scroll="n" html="n" >
				<cell type="chart" name="Pie" template="Pie" pos="0,0,0,0,f,f" >
					<form_script type="DataSource" language="SQL" >
						<script ><![CDATA[SELECT * FROM library]]></script>
					</form_script>
				</cell>
			</body>
		</form>
	</layout>
</project>